version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app-brnysn
    container_name: laravel-app-brnysn
    restart: unless-stopped
    volumes:
      - .:/var/www/html
      # Prevent vendor directory from being overwritten by the local mount
      - vendor_data:/var/www/html/vendor
    ports:
      - "8088:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - REDIS_HOST=redis

  mysql:
    image: mysql:8.0
    container_name: mysql-brnysn
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      # Persist MySQL data in a named volume
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    container_name: redis-brnysn
    restart: unless-stopped
    ports:
      - "6379:6379"

  nginx:
    image: nginx:latest
    container_name: nginx-brnysn
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - .docker/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

# Define named volumes
volumes:
  mysql_data:
    # Use a named volume to persist MySQL data between container restarts
    name: mysql_data_brnysn
  vendor_data:
    # Use a named volume to persist vendor directory and prevent overwrite
    name: vendor_data_brnysn
